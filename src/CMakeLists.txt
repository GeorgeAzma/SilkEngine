set(CREATE_INSTALLER OFF)
set(MAIN_PROJECT_NAME TestProject CACHE STRING "" FORCE)

project(${MAIN_PROJECT_NAME} VERSION 1.0.0 LANGUAGES CXX)

file(GLOB_RECURSE PROJECT_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/*.cpp)
if (WIN32 AND CMAKE_BUILD_TYPE STREQUAL "Release")
    add_executable(${MAIN_PROJECT_NAME} WIN32 ${PROJECT_SOURCES})
else()
    add_executable(${MAIN_PROJECT_NAME} ${PROJECT_SOURCES})
endif()
set_property(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT ${MAIN_PROJECT_NAME})
target_include_directories(${MAIN_PROJECT_NAME} PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
target_link_libraries(${MAIN_PROJECT_NAME} PUBLIC ${ENGINE_NAME})

file(REMOVE ${PROJECT_BINARY_DIR}/res)
file(COPY ${CMAKE_SOURCE_DIR}/res DESTINATION ${PROJECT_BINARY_DIR})

if(CREATE_INSTALLER)
    set(ICON_PATH ${CMAKE_SOURCE_DIR}/res/images/icons\\\\icon.ico)
    set(LICENSE_PATH ${CMAKE_SOURCE_DIR}/res/text/License.txt)
    install(TARGETS ${MAIN_PROJECT_NAME} DESTINATION .)
    install(DIRECTORY ${PROJECT_BINARY_DIR}/res DESTINATION .)
    if(EXISTS ${ICON_PATH})
        set(CPACK_NSIS_MUI_ICON ${ICON_PATH})
        set(CPACK_NSIS_MUI_UNIICON ${ICON_PATH})
        set(CPACK_NSIS_INSTALLED_ICON_NAME ${ICON_PATH})
    endif()
    if(EXISTS ${LICENSE_PATH})
        set(CPACK_RESOURCE_FILE_LICENSE ${LICENSE_PATH})
    endif()
    #set(CPACK_PACKAGE_ICON ${ICON_PATH})
    include(CPack)
endif()