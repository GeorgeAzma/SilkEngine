include(ExternalProject)

macro(externalProject)
    set(one_value_args NAME INCLUDE_DIR)
    set(multi_value_args BUILD_ARGS DEPENDS_ON)
    cmake_parse_arguments(SUBPROJECT "" "${one_value_args}" "${multi_value_args}" ${ARGN})
    ExternalProject_Add(${SUBPROJECT_NAME}
        PREFIX ${SUBPROJECT_NAME}
        DOWNLOAD_COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_SOURCE_DIR}/ext/${SUBPROJECT_NAME} ${CMAKE_CURRENT_BINARY_DIR}/${SUBPROJECT_NAME}/src
        TMP_DIR ${CMAKE_CURRENT_BINARY_DIR}/${SUBPROJECT_NAME}/tmp
        STAMP_DIR ${CMAKE_CURRENT_BINARY_DIR}/${SUBPROJECT_NAME}/stamp
        LOG_DIR ${CMAKE_CURRENT_BINARY_DIR}/${SUBPROJECT_NAME}/log
        DOWNLOAD_DIR ${CMAKE_CURRENT_BINARY_DIR}/${SUBPROJECT_NAME}/download
        SOURCE_DIR ${CMAKE_CURRENT_BINARY_DIR}/${SUBPROJECT_NAME}/src
        BINARY_DIR ${CMAKE_CURRENT_BINARY_DIR}/${SUBPROJECT_NAME}/bin
        INSTALL_DIR ${CMAKE_CURRENT_BINARY_DIR}/${SUBPROJECT_NAME}/install
        CMAKE_ARGS 
            -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
            -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}
            -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
            -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX}
            -DCMAKE_INSTALL_INCLUDEDIR=${CMAKE_INSTALL_INCLUDEDIR}
            -DCMAKE_INSTALL_LIBDIR=${CMAKE_INSTALL_LIBDIR}
            -DCMAKE_INSTALL_DOCDIR=${CMAKE_INSTALL_DOCDIR}
            -DCMAKE_INSTALL_BINDIR=${CMAKE_INSTALL_BINDIR}
            ${SUBPROJECT_BUILD_ARGS}
        DEPENDS ${SUBPROJECT_DEPENDS_ON}
        BUILD_ALWAYS OFF
        UPDATE_COMMAND ""
    )
    if(SUBPROJECT_DEPENDS_ON)
        ExternalProject_Add_StepDependencies(${SUBPROJECT_NAME} build ${SUBPROJECT_DEPENDS_ON})
    endif()
    if(SUBPROJECT_INCLUDE_DIR)
        list(APPEND INCLUDE_DIRS ${CMAKE_INSTALL_PREFIX}/include/${SUBPROJECT_INCLUDE_DIR})
    endif()
    list(APPEND DEPENDENCIES_TO_ADD ${SUBPROJECT_NAME})
endmacro() 

macro(externalProjectGit)
    set(one_value_args NAME GIT_REPO GIT_TAG INCLUDE_DIR)
    set(multi_value_args BUILD_ARGS DEPENDS_ON)
    cmake_parse_arguments(SUBPROJECT "" "${one_value_args}" "${multi_value_args}" ${ARGN})
    ExternalProject_Add(${SUBPROJECT_NAME}
        PREFIX ${SUBPROJECT_NAME}
        GIT_REPOSITORY ${GIT_REPO}
        GIT_TAG ${GIT_TAG}
        GIT_SHALLOW ON
        TMP_DIR ${CMAKE_CURRENT_BINARY_DIR}/${SUBPROJECT_NAME}/tmp
        STAMP_DIR ${CMAKE_CURRENT_BINARY_DIR}/${SUBPROJECT_NAME}/stamp
        LOG_DIR ${CMAKE_CURRENT_BINARY_DIR}/${SUBPROJECT_NAME}/log
        DOWNLOAD_DIR ${CMAKE_CURRENT_BINARY_DIR}/${SUBPROJECT_NAME}/download
        SOURCE_DIR ${CMAKE_CURRENT_BINARY_DIR}/${SUBPROJECT_NAME}/src
        BINARY_DIR ${CMAKE_CURRENT_BINARY_DIR}/${SUBPROJECT_NAME}/bin
        INSTALL_DIR ${CMAKE_CURRENT_BINARY_DIR}/${SUBPROJECT_NAME}/install
        CMAKE_ARGS 
            -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
            -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}
            -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
            -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX}
            -DCMAKE_INSTALL_INCLUDEDIR=${CMAKE_INSTALL_INCLUDEDIR}
            -DCMAKE_INSTALL_LIBDIR=${CMAKE_INSTALL_LIBDIR}
            -DCMAKE_INSTALL_DOCDIR=${CMAKE_INSTALL_DOCDIR}
            -DCMAKE_INSTALL_BINDIR=${CMAKE_INSTALL_BINDIR}
            ${SUBPROJECT_BUILD_ARGS}
        DEPENDS ${SUBPROJECT_DEPENDS_ON}
        BUILD_ALWAYS OFF
        UPDATE_COMMAND ""
    )
    if(SUBPROJECT_DEPENDS_ON)
        ExternalProject_Add_StepDependencies(${SUBPROJECT_NAME} build ${SUBPROJECT_DEPENDS_ON})
    endif()
    if(SUBPROJECT_INCLUDE_DIR)
        list(APPEND INCLUDE_DIRS ${CMAKE_INSTALL_PREFIX}/include/${SUBPROJECT_INCLUDE_DIR})
    endif()
    list(APPEND DEPENDENCIES_TO_ADD ${SUBPROJECT_NAME})
endmacro() 

list(APPEND INCLUDE_DIRS ${CMAKE_INSTALL_PREFIX}/include)

subdirList(INCLUDE_SUBDIRS ${CMAKE_SOURCE_DIR}/ext)
if(INCLUDE_SUBDIRS)
    foreach(subdir ${INCLUDE_SUBDIRS})
        if(NOT EXISTS ${CMAKE_SOURCE_DIR}/ext/${subdir}/CMakeLists.txt)
            list(APPEND INCLUDE_DIRS ${CMAKE_SOURCE_DIR}/ext/${subdir})
        endif()
    endforeach()
endif()

file(GLOB_RECURSE EXTERNAL_PROJECT_LIBS "${CMAKE_INSTALL_PREFIX}/*${CMAKE_STATIC_LIBRARY_SUFFIX}")

if(EXTERNAL_PROJECT_LIBS)
    list(APPEND EXTRA_LIBS ${EXTERNAL_PROJECT_LIBS})
endif()